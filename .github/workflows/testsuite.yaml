name: Run Tests
on: [push, pull_request]

jobs:
  tests:
    env:
      ENV_NAME: tests
      PYTHON: ${{ matrix.python-version }}
      WITH_SUDO: yes
      OS: ${{ matrix.os }}
    name: Testing
    runs-on: ${{ matrix.os }}
    defaults:
     run:
       # Adding -l {0} helps ensure conda can be found properly in windows.
       shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.8, 3.9, "3.10"]
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
            miniforge-variant: Mambaforge
            miniforge-version: latest
            use-mamba: true
            python-version: ${{ env.PYTHON }}
            environment-file: ci/${{ env.ENV_NAME }}.yaml
            activate-environment: ${{ env.ENV_NAME }}

      - name: Mamba Info
        run: |
          mamba info -a
          mamba list
          PYVER=`python -c "import sys; print('{:d}.{:d}'.format(sys.version_info.major, sys.version_info.minor))"`
          if [[ $PYVER != ${{ env.PYTHON }} ]]; then
            exit 1;
          fi

      - name: Install
        run: |
          pip install -e .[all]

      - name: Run Tests
        run: |
          python -m pytest --cov=simpleDS --cov-config=.coveragerc --cov-report xml:./coverage.xml --junitxml=test-reports/xunit.xml

      - uses: codecov/codecov-action@master
        if: matrix.os == 'ubuntu-latest' && success()
        with:
          token: ${{secrets.CODECOV_TOKEN}} #required
          file: ./coverage.xml #optional

      - name: Upload Coverage (Mac OS)
        if: matrix.os == 'macos-latest' && success()
        run: |
          bash <(curl -s https://codecov.io/bash) -t ${{secrets.CODECOV_TOKEN}}

  notebook:
    name: Tutorial Notebook
    runs-on: ubuntu-latest
    defaults:
     run:
       # Adding -l {0} helps ensure conda can be found properly in windows.
       shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.7]

    needs: [tests]

    env:
      ENV_NAME: tutorial
      WITH_SUDO: yes
      PYTHON: ${{ matrix.python-version }}
      OS: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
            miniforge-variant: Mambaforge
            miniforge-version: latest
            use-mamba: true
            python-version: ${{ env.PYTHON }}
            environment-file: ci/${{ env.ENV_NAME }}.yaml
            activate-environment: ${{ env.ENV_NAME }}

      - name: Mamba Info
        run: |
          mamba info -a
          mamba list
          PYVER=`python -c "import sys; print('{:d}.{:d}'.format(sys.version_info.major, sys.version_info.minor))"`
          if [[ $PYVER != ${{ env.PYTHON }} ]]; then
            exit 1;
          fi

      - name: Install
        run: |
          pip install -e .[all]

      - name: Run Tests
        run: |
          python -m pytest --nbval --current-env docs/examples/simpleDS_tutorial.ipynb
