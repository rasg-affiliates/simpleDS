name: Publish Python distributions to PyPI and TestPyPI

on:
  push:
    tags:
      - '*'

jobs:
  build-n-publish:
    name: Build and publish to PyPI
    runs-on: ubuntu-latest
    defaults:
      run:
        # Adding -l {0} helps ensure conda can be found properly.
        shell: bash -l {0}
    env:
      ENV_NAME: publish
      PYTHON: 3.8
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
            miniforge-variant: Mambaforge
            miniforge-version: latest
            use-mamba: true
            python-version: ${{ env.PYTHON }}
            environment-file: ci/${{ env.ENV_NAME }}.yaml
            activate-environment: ${{ env.ENV_NAME }}

      - name: Mamba Info
        run: |
          mamba info -a
          mamba list
          PYVER=`python -c "import sys; print('{:d}.{:d}'.format(sys.version_info.major, sys.version_info.minor))"`
          if [[ $PYVER != ${{ env.PYTHON }} ]]; then
            exit 1;
          fi

      - name: Build a binary wheel and a source tarball
        run: |
          python -m build --source --out-dir dist/ .

      - name: Publish to Test PyPI
        if: startsWith(github.event.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.test_pypi_password }}
          repository_url: https://test.pypi.org/legacy/

      - name: Publish to PyPI
        if: startsWith(github.event.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
